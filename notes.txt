What is typescript ?
Static Typed, Superset of Js to provide efficient debugging.
adds helpful and productive features over js
originally developed to handle large projects but cann handle smaller ones too.
It also refers to the compiler which trans-compiles code written in ts syntax to js which is widely supported accross all browsers

Types of Js features :
1. widely suppported : adopted by all browsers
2. es current : specified in the docs but still not adopted by all browsers
3. es future : to be added in future to js
With ts using all these features is possible along with other features in modern browsers
the ts transpiler converts strong , static typed ts to plain js which any browser can understand

advantages of js:
1.catch errors at compile time instead of run time 
2.better tooling support (refactoring, autocomplete and so on)
3.explicitly express intent


Start:
1. install nodejs and then install typescript globally using npm
2. in the root directory of your project file add the tsconfig.json file
3. In src folder add model.ts then type tsc -w (for watching changes)
4. You will notice a dist folder being with a file model.js w
5. This will consist of all the transpiled js code originally written in ts in model.ts

Primitive Types in Js :
String , Boolean, Number, BigInt, Null, Undefined, Symbol(ES6), 

Complex Types in Js : Objects(complex) - types such as dates and Arrays and even functions fall under this umbrella

We can define types explicitly in ts 
for variable : let name: string = "adeeb"
for functions :  function getInventoryItem(trackingNumber: string): void {}
   the return type can also be Object
   we can also define the structure of the object instead of simply writing object instead of void
    
    function getInventoryItem(trackingNumber: string): {
        displayName: string;
        inventoryType: string;
        trackingNumber: string;
        createDate: Date;
        originalCost: number; 
    } {
        return null;
    }

Type Inference 
: Typescript can infer types of variables from the value assigned to it in some cases
    let inventoryItem = getInventoryItem(trackingNumber);
    here invertoryItem will be assigned the return type of getInventoryItem
    we dont need to define the inventoryItem type explicitly in this case

Gradual typing
: In JS we can change the types of variable dynamically, for eg
  let money = 23; //number 
  money = "A lot"; //redefined to string
  is allowed in js

  To allow this in ts we can define the type of a variable as any
  let originalCost: any = 425;
  originalCost = "A lot of money"
  However, It is not recommended to use this feature in ts unless you really need it

  









